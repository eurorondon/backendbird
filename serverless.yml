app: backendbird
service: backendbird
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  region: us-west-2
  environment:
    BUCKET_NAME: ${self:service}-photos-${sls:stage}
    PHOTOS_TABLE: ${self:service}-rekognition-photos-${sls:stage}
  httpApi:
    cors: true
  
  iam:
    role:
      statements:
        - Effect: Allow
          Action: 
            - "s3:*"
          Resource: "arn:aws:s3:::${self:service}-photos-${sls:stage}"
        - Effect: Allow
          Action:
            - "rekognition: detectLabels"
          Resource: "*"
        - Effect : Allow
          Action:
            - 'dynamodb:PutItem'
            - 'dynamodb:Get*'
            - 'dynamodb:Scan*'
            - 'dynamodb:Query*'
            - 'dynamodb:UpdateItem'
            - 'dynamodb:DeleteItem'
          Resource: "arn:aws:dynamodb:us-west-2:531644786567:table/${self:service}-rekognition-photos-${sls:stage}"




resources:
  Resources:

    PhotosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: primary_key
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: primary_key
            KeyType: HASH
        TableName: ${self:service}-rekognition-photos-${sls:stage}

    PhotoBucket: 
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-photos-${sls:stage}
    PhotoBucketAllowPublicReadPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref PhotoBucket
        PolicyDocument:
          Version: "2012-10-17"
          Statement: 
            - Effect: Allow
              Action: 
                - "s3:*"
              Resource: 
                - !Join ['/', [!GetAtt [PhotoBucket, Arn], '*']]
              Principal: "*"   

functions:
  savePhoto:
    handler: functions/savePhoto.savePhoto
    events:
      - httpApi:
          path: /
          method: post
         
  getPhotos: 
    handler: functions/getPhotos.getPhotos
    events:
      - httpApi:
          path: /
          method: get
         
 

plugins:
  - serverless-offline
custom:
  serverless-offline:
    httpPort: 3009
